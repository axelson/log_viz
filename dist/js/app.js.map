{
  "version": 3,
  "sources": ["../../assets/js/app.js"],
  "sourcesContent": ["let Hooks = {}\n\nHooks.TimestampWidthHook = {\n  mounted() {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = '16px ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"'; // Set the font to match your text\n\n    const textWidth = context.measureText('10:05:56.863').width;\n\n    const leftPadding = parseFloat(getComputedStyle(this.el).paddingLeft);\n    const rightPadding = parseFloat(getComputedStyle(this.el).paddingRight);\n\n    window.el = this.el;\n    const width = textWidth + leftPadding + rightPadding;\n    this.el.style.width = `${width}px`;\n  }\n}\n\nHooks.TextExpand = {\n  expandBtn: null,\n  maxHeightPx: 150,\n  expanded: false,\n\n  mounted() {\n    const rrect = this.el.getBoundingClientRect();\n\n    this.expandBtn = this.el.getElementsByClassName('expand-button')[0];\n    this.expandBtn.style.visibility = 'hidden';\n    this.expandBtn.addEventListener('click', () => {\n      this.toggleExpand();\n    });\n\n    this.el.style.overflow = 'hidden';\n    this.el.style.maxHeight = `${this.maxHeightPx}px`;\n    this.el.style.position = 'relative';\n\n    if (rrect.height >= this.maxHeightPx) {\n      console.log('should be visible!')\n      this.expandBtn.style.visibility = 'visible';\n    }\n  },\n\n  toggleExpand() {\n    this.expanded = !this.expanded;\n    if (this.expanded) {\n      this.el.style.maxHeight = '';\n      this.expandBtn.innerText = 'collapse';\n    } else {\n      this.el.style.maxHeight = `${this.maxHeightPx}px`;\n      this.expandBtn.innerText = 'expand';\n    }\n  }\n}\n\n\nlet socketPath = document.querySelector(\"html\").getAttribute(\"phx-socket\") || \"/live\"\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\nlet liveSocket = new LiveView.LiveSocket(socketPath, Phoenix.Socket, {\n  hooks: Hooks,\n  params: (_liveViewName) => {\n    return {\n      _csrf_token: csrfToken,\n      // Pass the most recent refresh data to the LiveView in `connect_params`\n      // refresh_data: loadRefreshData(),\n    };\n  },\n})\n\n\nconst socket = liveSocket.socket\nconst originalOnConnError = socket.onConnError\nlet fallbackToLongPoll = true\n\nsocket.onOpen(() => {\n  fallbackToLongPoll = false\n})\n\nsocket.onConnError = (...args) => {\n  if (fallbackToLongPoll) {\n    // No longer fallback to longpoll\n    fallbackToLongPoll = false\n    // close the socket with an error code\n    socket.disconnect(null, 3000)\n    // fall back to long poll\n    socket.transport = Phoenix.LongPoll\n    // reopen\n    socket.connect()\n  } else {\n    originalOnConnError.apply(socket, args)\n  }\n}\n\n// Show progress bar on live navigation and form submits\n// window.addEventListener(\"phx:page-loading-start\", info => NProgress.start())\n// window.addEventListener(\"phx:page-loading-stop\", info => NProgress.done())\n\n// connect if there are any LiveViews on the page\nliveSocket.connect()\n\n// expose liveSocket on window for web console debug logs and latency simulation:\n// >> liveSocket.enableDebug()\n// >> liveSocket.enableLatencySim(1000)\nwindow.liveSocket = liveSocket\n"],
  "mappings": "MAAA,IAAIA,EAAQ,CAAC,EAEbA,EAAM,mBAAqB,CACzB,SAAU,CAER,IAAMC,EADS,SAAS,cAAc,QAAQ,EACvB,WAAW,IAAI,EACtCA,EAAQ,KAAO,0HAEf,IAAMC,EAAYD,EAAQ,YAAY,cAAc,EAAE,MAEhDE,EAAc,WAAW,iBAAiB,KAAK,EAAE,EAAE,WAAW,EAC9DC,EAAe,WAAW,iBAAiB,KAAK,EAAE,EAAE,YAAY,EAEtE,OAAO,GAAK,KAAK,GACjB,IAAMC,EAAQH,EAAYC,EAAcC,EACxC,KAAK,GAAG,MAAM,MAAQ,GAAGC,CAAK,IAChC,CACF,EAEAL,EAAM,WAAa,CACjB,UAAW,KACX,YAAa,IACb,SAAU,GAEV,SAAU,CACR,IAAMM,EAAQ,KAAK,GAAG,sBAAsB,EAE5C,KAAK,UAAY,KAAK,GAAG,uBAAuB,eAAe,EAAE,CAAC,EAClE,KAAK,UAAU,MAAM,WAAa,SAClC,KAAK,UAAU,iBAAiB,QAAS,IAAM,CAC7C,KAAK,aAAa,CACpB,CAAC,EAED,KAAK,GAAG,MAAM,SAAW,SACzB,KAAK,GAAG,MAAM,UAAY,GAAG,KAAK,WAAW,KAC7C,KAAK,GAAG,MAAM,SAAW,WAErBA,EAAM,QAAU,KAAK,cACvB,QAAQ,IAAI,oBAAoB,EAChC,KAAK,UAAU,MAAM,WAAa,UAEtC,EAEA,cAAe,CACb,KAAK,SAAW,CAAC,KAAK,SAClB,KAAK,UACP,KAAK,GAAG,MAAM,UAAY,GAC1B,KAAK,UAAU,UAAY,aAE3B,KAAK,GAAG,MAAM,UAAY,GAAG,KAAK,WAAW,KAC7C,KAAK,UAAU,UAAY,SAE/B,CACF,EAGA,IAAIC,EAAa,SAAS,cAAc,MAAM,EAAE,aAAa,YAAY,GAAK,QAC1EC,EAAY,SAAS,cAAc,yBAAyB,EAAE,aAAa,SAAS,EACpFC,EAAa,IAAI,SAAS,WAAWF,EAAY,QAAQ,OAAQ,CACnE,MAAOP,EACP,OAASU,IACA,CACL,YAAaF,CAGf,EAEJ,CAAC,EAGKG,EAASF,EAAW,OACpBG,EAAsBD,EAAO,YAC/BE,EAAqB,GAEzBF,EAAO,OAAO,IAAM,CAClBE,EAAqB,EACvB,CAAC,EAEDF,EAAO,YAAc,IAAIG,IAAS,CAC5BD,GAEFA,EAAqB,GAErBF,EAAO,WAAW,KAAM,GAAI,EAE5BA,EAAO,UAAY,QAAQ,SAE3BA,EAAO,QAAQ,GAEfC,EAAoB,MAAMD,EAAQG,CAAI,CAE1C,EAOAL,EAAW,QAAQ,EAKnB,OAAO,WAAaA",
  "names": ["Hooks", "context", "textWidth", "leftPadding", "rightPadding", "width", "rrect", "socketPath", "csrfToken", "liveSocket", "_liveViewName", "socket", "originalOnConnError", "fallbackToLongPoll", "args"]
}
